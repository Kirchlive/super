name: Documentation Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**.md'
      - '.github/workflows/docs-validation.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '**.md'

jobs:
  validate-markdown:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install markdown-lint
      run: |
        npm install -g markdownlint-cli
        npm install -g markdown-link-check
        
    - name: Lint Markdown files
      run: |
        markdownlint '**/*.md' --ignore node_modules --ignore .github
        
    - name: Check Markdown links
      run: |
        find . -name "*.md" -not -path "./.github/*" -not -path "./node_modules/*" | \
        xargs -I {} markdown-link-check {} --config .github/markdown-link-check-config.json
      continue-on-error: true
      
  check-structure:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check required files exist
      run: |
        required_files=(
          "README.md"
          "CONTRIBUTING.md"
          "SECURITY.md"
          "CLAUDE.md"
          "PLAN-USAGE-GUIDE.md"
        )
        
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "Required file missing: $file"
            exit 1
          fi
        done
        
        echo "All required files present ✓"
        
    - name: Check documentation completeness
      run: |
        # Check if all plans are documented
        plans=("ARCHITECTURE.md" "INTEGRATION.md" "IMPLEMENTATION.md" "EDA.md" "EVENTDRIVEN.md")
        
        for plan in "${plans[@]}"; do
          if [ ! -f "$plan" ]; then
            echo "Plan file missing: $plan"
            exit 1
          fi
        done
        
        echo "All plan files present ✓"
        
  spell-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Spell Check
      uses: streetsidesoftware/cspell-action@v5
      with:
        config: '.github/cspell.json'
        files: '**/*.md'
        
  validate-examples:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Check example structure
      run: |
        if [ ! -d "EXAMPLES" ]; then
          echo "EXAMPLES directory missing"
          exit 1
        fi
        
        # Check each example has required files
        for example in EXAMPLES/*/; do
          if [ -d "$example" ]; then
            echo "Checking $example"
            if [ ! -f "$example/README.md" ]; then
              echo "Missing README.md in $example"
              exit 1
            fi
          fi
        done
        
        echo "All examples have README files ✓"